{"version":3,"sources":["store.js","reducers/DataTableReducers.js","reduxtypes.js","reducers/portfolioReducers.js","reducers/brokerReducers.js","routes/Add.js","routes/Edit.js","routes/Home.js","actions/brokerActions.js","actions/portfolioActions.js","actions/DataTableActions.js","components/Ribbon.js","routes/Login.js","components/Notes.js","components/Log.js","components/DataTable.js","routes/Portfolio.js","components/Nav.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","logs","state","action","type","payload","portfolio","brokers","applyMiddleware","thunk","Add","props","className","Component","Home","setBrokers","setState","this","fetchBrokers","fetchPortfolio","fetchLogs","updateScreenName","map","broker","i","key","to","onClick","updatePortfolio","name","renderBrokers","connect","dispatch","user1","b1","log","Ribbon","currentTab","tabs","tab","updateCurrentTab","tabName","getTabs","Notes","isModalVisibleClass","isVisible","closeNotes","notes","Log","showNotes","undefined","data","entry","pkey","period","actionStringClassName","includes","date","ticker","openNotes","bought","sold","getData","bind","DataTable","a","showTable","Portfolio","Nav","title","screen","Footer","App","exact","path","component","from","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.350468b1.chunk.js","sourcesContent":["import {createStore, applyMiddleware, compose, combineReducers} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n// Reducers\r\nimport { brokersReducer } from './reducers/brokerReducers';\r\nimport { portfolioReducer } from './reducers/portfolioReducers';\r\nimport { DataTableReducer } from './reducers/DataTableReducers';\r\n\r\nconst initialState = {};\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    combineReducers({\r\n        logs: DataTableReducer,\r\n        portfolio: portfolioReducer,\r\n        brokers: brokersReducer\r\n    }),\r\n    initialState,\r\n    composeEnhancer(applyMiddleware(thunk))\r\n    );\r\n\r\nexport default store;","import {\r\n    FETCH_LOGS,\r\n    ADD_TO_LOGS\r\n} from '../reduxtypes';\r\n\r\nexport const DataTableReducer = ( state = {}, action ) => {\r\n    switch(action.type){\r\n        case FETCH_LOGS:\r\n            return { logs: action.payload };\r\n        default: \r\n            return state;\r\n    }\r\n}","// Program Data\r\nexport const FETCH_PORTFOLIO = \"FETCH_PORTFOLIO\";\r\nexport const UPDATE_PORTFOLIO = \"UPDATE_PORTFOLIO\";\r\n\r\n// User Data\r\nexport const FETCH_BROKERS = \"FETCH_BROKERS\";\r\nexport const ADD_TO_BROKERS = \"ADD_TO_BROKERS\";\r\nexport const FETCH_LOGS = \"FETCH_LOGS\";\r\nexport const ADD_TO_LOGS = \"ADD_TO_LOGS\";","import { \r\n    FETCH_PORTFOLIO,\r\n    UPDATE_PORTFOLIO\r\n} from \"../reduxtypes\";\r\n\r\nexport const portfolioReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case FETCH_PORTFOLIO:\r\n            return { portfolio: action.payload };\r\n        case UPDATE_PORTFOLIO:\r\n            return { portfolio: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { FETCH_BROKERS } from \"../reduxtypes\";\r\n\r\nexport const brokersReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case FETCH_BROKERS:\r\n            return { brokers: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};","import React, {Component} from 'react';\r\n\r\nclass Add extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"Add\">\r\n                add works\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Add;","import React, {Component} from 'react';\r\n\r\nclass Edit extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"Edit\">\r\n                Edit works\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Edit;","// Packages\r\nimport React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\nimport '../styles/Home.css';\r\n\r\n// Redux\r\nimport { fetchBrokers } from '../actions/brokerActions';\r\nimport { fetchPortfolio, updatePortfolio } from '../actions/portfolioActions';\r\nimport { fetchLogs } from '../actions/DataTableActions';\r\n\r\n// Components\r\n\r\n\r\nclass Home extends Component{\r\n\r\n    // props\r\n    // this.props.<redux-store>\r\n        // this.props.fetchBrokers()\r\n        // this.props.updatePortfolio()\r\n        // this.props.fetchLogs();\r\n    // this.props.updateScreenName()\r\n    // this.props.currentScreenName\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            brokers: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.fetchBrokers();\r\n        this.props.fetchPortfolio();\r\n        this.props.fetchLogs();\r\n        this.props.updateScreenName(\"home\");\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.props.updateScreenName(\"home\"); // todo1: create constants\r\n    }\r\n\r\n    setBrokers = (brokers) => {\r\n        this.setState({brokers});\r\n    }\r\n\r\n    renderBrokers(){\r\n        return this.state.brokers.map( (broker, i) => {\r\n            return <ul key={i} className=\"Brokers\">\r\n                <Link to={'/Portfolio'}>\r\n                    <li onClick={ () => this.props.updatePortfolio(broker.name)} className=\"Broker\">{broker.name}</li>\r\n                </Link>\r\n            </ul>\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"Home Screen\">\r\n                <div className=\"Activator\">\r\n                    <button onClick={() => this.setBrokers(this.props.brokers)} className=\"Activator-btn\"> Fetch </button>\r\n                </div>\r\n                <div className=\"Brokers\">\r\n                    {this.renderBrokers()}\r\n                </div>\r\n                <div className=\"Add\">\r\n                    <Link to={'/Add'}>\r\n                        <button className=\"Add-btn\">+</button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({ \r\n        brokers: state.brokers.brokers,\r\n    }),\r\n    {\r\n        fetchBrokers, \r\n        fetchPortfolio, updatePortfolio,\r\n        fetchLogs\r\n    }\r\n)(Home);","import { \r\n    FETCH_BROKERS \r\n} from '../reduxtypes';\r\n\r\nimport user1 from '../mockdata/user1';\r\n\r\nexport const fetchBrokers = () => dispatch => {\r\n    dispatch({\r\n        type: FETCH_BROKERS,\r\n        payload: user1.brokers\r\n    });\r\n}","import { \r\n    FETCH_PORTFOLIO, \r\n    UPDATE_PORTFOLIO \r\n} from '../reduxtypes';\r\n\r\nexport const fetchPortfolio = () => dispatch => {\r\n    dispatch({\r\n        type: FETCH_PORTFOLIO,\r\n        payload: \"redux-default\"\r\n    });\r\n}\r\n\r\nexport const updatePortfolio = (portfolio) => dispatch => {\r\n    dispatch({\r\n        type: UPDATE_PORTFOLIO,\r\n        payload: portfolio\r\n    });\r\n}","import {\r\n    FETCH_LOGS,\r\n    ADD_TO_LOGS\r\n} from '../reduxtypes';\r\n\r\nimport user1 from '../mockdata/user1.json';\r\n\r\nexport const fetchLogs = () => dispatch => {\r\n    dispatch({\r\n        type: FETCH_LOGS,\r\n        payload: user1.b1.log\r\n    });\r\n}","import React, {Component} from 'react';\r\nimport '../styles/Ribbon.css';\r\n\r\nclass Ribbon extends Component {\r\n\r\n    // this.props.updateCurrentTab()\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            currentTab: \"Log\",\r\n            tabs: [ // todo: Get from user data\r\n                \"Master\",\r\n                \"Holdings\",\r\n                \"Log\",\r\n                \"Topup / Withdraw\",\r\n                \"Buy / Sell\",\r\n                \"Fees\",\r\n                \"Dividends\"\r\n            ]\r\n        }\r\n    }\r\n\r\n    updateCurrentTab(tab){\r\n        this.setState({currentTab: tab});\r\n        this.props.updateCurrentTab(tab);\r\n    }\r\n\r\n    getTabs(){\r\n        let defaultClass = \"Tab-inner \";\r\n        let highlightedClass = \" Tab-inner-highlighted\";\r\n        return this.state.tabs.map((tabName, i) => {\r\n            return <li onClick={ () => this.updateCurrentTab(tabName)} className=\"Tab\" key={i}>\r\n                <span className={defaultClass + (tabName === this.state.currentTab ? highlightedClass : \"\")}>{tabName}</span>\r\n            </li>\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"Ribbon\">\r\n                <ul className=\"Tabs\">\r\n                    {this.getTabs()}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Ribbon;","import React, {Component} from 'react';\r\n\r\nclass Login extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"Login\">\r\n                Login works\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, {Component} from 'react';\r\nimport '../styles/Notes.css';\r\n\r\nexport default class Notes extends Component {\r\n    \r\n    // this.props.notes\r\n    // this.props.isVisible\r\n    // this.props.closeNotes\r\n\r\n    render(){\r\n        let isModalVisibleClass = this.props.isVisible ? \" Notes \" : \" Notes-hide \";\r\n\r\n        return(\r\n            <div className={isModalVisibleClass}>\r\n                <div className=\" Notes-exit \" onClick={this.props.closeNotes}>\r\n                    x\r\n                </div>\r\n                <div className=\" Notes-content \">\r\n                    {this.props.notes}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport '../styles/DataTable.css';\r\n\r\n// components \r\nimport Notes from './Notes';\r\n\r\nclass Log extends Component {\r\n    \r\n    // this.props.data\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showNotes: false,\r\n            notes: \"\"\r\n        }\r\n    }\r\n\r\n    closeNotes(){\r\n        this.setState({showNotes: false});\r\n    }\r\n\r\n    openNotes(notes){\r\n        this.setState({showNotes: true, notes});\r\n    }\r\n\r\n    getData(){\r\n        if(this.props.data === undefined) return <tr><td>must fetch first</td></tr>;\r\n\r\n        return this.props.data.map( (entry, i) => {\r\n            if(entry.type === \"start\"){\r\n                return <tr key={i}>\r\n                    <td>{entry.pkey}</td>\r\n                    <td><b>{entry.period}</b></td>\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td></td>\r\n                </tr>\r\n            }\r\n            else if(entry.type === \"reg\"){\r\n                let actionStringClassName = \" \";\r\n\r\n                if(entry.action.includes(\"Topup\")){\r\n                    actionStringClassName = \" Topup \";\r\n                }\r\n                else if(entry.action.includes(\"BUY\")){\r\n                    actionStringClassName = \" Buy \";\r\n                }\r\n                else if(entry.action.includes(\"SELL\")){\r\n                    actionStringClassName = \" Sell \";\r\n                }\r\n                else if(entry.action.includes(\"Withdraw\")){\r\n                    actionStringClassName = \" Withdraw \";\r\n                }\r\n                else if(entry.action.includes(\"Dividend\")){\r\n                    actionStringClassName = \" Dividend \";\r\n                }\r\n                else if(entry.action.includes(\"Fee\")){\r\n                    actionStringClassName = \" Fee \";\r\n                }\r\n\r\n                return <tr key={i}>\r\n                    <td>{entry.pkey}</td>\r\n                    <td>{entry.date}</td>\r\n                    \r\n                    <td className={actionStringClassName}>{entry.action}</td>\r\n                    \r\n                    <td>{entry.ticker}</td>\r\n                    <td className=\"OpenNotes\" onClick={ () => this.openNotes(entry.notes)}> x </td>\r\n                </tr>\r\n            }\r\n            else if(entry.type === \"end1\"){\r\n                return <tr key={i}>\r\n                    <td>{entry.pkey}</td>\r\n                    <td></td>\r\n                    <td><b>BOUGHT</b></td>\r\n                    <td>{entry.bought}</td>\r\n                    <td></td>\r\n                </tr>\r\n            }\r\n            else if(entry.type === \"end2\"){\r\n                return <tr key={i}>\r\n                    <td>{entry.pkey}</td>\r\n                    <td></td>\r\n                    <td><b>SOLD</b></td>\r\n                    <td>{entry.sold}</td>\r\n                    <td></td>\r\n                </tr>\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Ref</th>\r\n                            <th>Date</th>\r\n                            <th>Action</th>\r\n                            <th>Symbol</th>\r\n                            <th>Notes</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.getData()}\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"AddLog\">\r\n                    ADD +\r\n                </div>\r\n                \r\n                <Notes notes={this.state.notes} isVisible={this.state.showNotes} closeNotes={this.closeNotes.bind(this)}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Log;","import React, {Component} from 'react';\r\nimport '../styles/DataTable.css';\r\n\r\n// Components\r\nimport Log from './Log';\r\n\r\nclass DataTable extends Component {\r\n\r\n    // this.props.currentTab\r\n    // this.props.data\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            a: 1\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let showTable = () => { return \"n/a\" };\r\n        \r\n        switch(this.props.currentTab){\r\n            case \"Log\":\r\n                showTable = () => { return <Log data={this.props.data}/> }\r\n                break;\r\n            default:\r\n                showTable = () => { return \"Invalid Choice\" }\r\n                break;\r\n        }\r\n\r\n        return(\r\n            <div className=\"DataTable\">\r\n                {showTable()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DataTable;","// Packages\r\nimport React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../styles/Portfolio.css';\r\n\r\n// Components\r\nimport Ribbon from '../components/Ribbon';\r\nimport DataTable from '../components/DataTable';\r\n\r\nclass Portfolio extends Component{\r\n\r\n    // props\r\n    // this.props.<redux-store>\r\n        // this.props.portfolio\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentTab: \"Log\"\r\n        }\r\n    }\r\n\r\n    updateCurrentTab(tab){\r\n        this.setState({currentTab: tab});\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.updateScreenName(\"portfolio\"); // Hacky\r\n    }\r\n    \r\n    componentDidUpdate(){\r\n        this.props.updateScreenName(\"portfolio\"); // todo1: create constants\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"Portfolio Screen\"> \r\n                <div className=\"BrokerName\"> {this.props.portfolio} </div>\r\n                <Ribbon \r\n                updateCurrentTab={this.updateCurrentTab.bind(this)} \r\n                />\r\n\r\n                <DataTable \r\n                currentTab={this.state.currentTab}\r\n                data={this.props.logs}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({ \r\n        portfolio: state.portfolio.portfolio,\r\n        logs: state.logs.logs\r\n    }),\r\n    {\r\n        \r\n    }\r\n)(Portfolio);","// Packages\r\nimport React, {Component} from 'react';\r\nimport {HashLink as Link} from 'react-router-hash-link';\r\nimport '../styles/Nav.css';\r\n\r\nclass Nav extends Component{\r\n    \r\n    // props\r\n    // this.props.screen\r\n    //\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        let title;\r\n        if(this.props.screen === \"home\"){\r\n            title = \"Select Portfolio\";\r\n        }\r\n        if(this.props.screen === \"portfolio\"){\r\n            title = \"Portfolio\";\r\n        }\r\n\r\n        return(\r\n            <div className=\"Nav\">\r\n                <div className=\"wrapper\">\r\n                    <div className=\"col Padding\">\r\n                        <Link to={'/'}>\r\n                            <div> ↶ </div>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col Title\">\r\n                        {title}\r\n                    </div>\r\n                    <div className=\"col MenuBtn\">\r\n                        <div className=\"hamburger\"> ☰ </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport '../styles/Footer.css';\r\n\r\nexport default function Footer(){\r\n    return(\r\n        <div className=\"Footer\">\r\n            foot\r\n        </div>\r\n    );\r\n}\r\n","// Packages\r\nimport './App.css';\r\nimport React, {Component} from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter, Switch, Route, Redirect} from 'react-router-dom';\r\n\r\n\r\n// Redux\r\nimport store from './store';\r\n\r\n// Components and Routes\r\nimport Add from './routes/Add';\r\nimport Edit from './routes/Edit';\r\nimport Home from './routes/Home';\r\nimport Login from './routes/Login';\r\nimport Portfolio from './routes/Portfolio';\r\nimport Nav from './components/Nav';\r\nimport Footer from './components/Footer';\r\n\r\nclass App extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      screen: \"home\"\r\n    }\r\n  }\r\n\r\n  updateScreenName(screen){\r\n    if(this.state.screen !== screen) this.setState({screen});\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <Provider store={store}>\r\n        <HashRouter>\r\n            <div className=\"App\">\r\n              \r\n              <Nav \r\n              screen={this.state.screen}/>\r\n\r\n              <Switch>\r\n                <Route exact path='/' component = {\r\n                  () => <Home \r\n                  updateScreenName={this.updateScreenName.bind(this)}\r\n                  />\r\n                }/>\r\n\r\n                <Route exact path='/Portfolio' component = {\r\n                  () => <Portfolio \r\n                  updateScreenName={this.updateScreenName.bind(this)}\r\n                  />\r\n                }/>\r\n\r\n                <Route exact path='/Add' component = {\r\n                  () => <Add \r\n                  updateScreenName={this.updateScreenName.bind(this)}\r\n                  />\r\n                }/>\r\n\r\n                <Redirect from=\"*\" to=\"/\" />\r\n              </Switch>\r\n\r\n              <Footer />\r\n\r\n            </div>\r\n        </HashRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}